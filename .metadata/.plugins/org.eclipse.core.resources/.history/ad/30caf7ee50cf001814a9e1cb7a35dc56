#include <bits/stdc++.h>

using namespace std;

vector<int> dijkstra(map<int, vector<pair<int, int>>> graph, int source){
	vector<int> distance (graph.size(), INT_MAX);
	priority_queue<pair<int, int>> pq;
	distance[source] = 0;
	pq.push({0, source});

	while(!pq.empty()){
		pair<int, int> front = pq.top();
		int d = front.first * -1;
		int u = front.second;
		pq.pop();

		if(d > distance[u]){
			continue;
		}

		for(auto n : graph[front.second]){
			if(distance[d] + n.second < distance[n.first]){
				distance[n.first] = distance[u] + u;
				pq.push({-distance[n.first], n.first})
			}
		}
	}
}

int main() {
	return 0;
}
