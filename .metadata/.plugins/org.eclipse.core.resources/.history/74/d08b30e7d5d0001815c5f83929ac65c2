#include <bits/stdc++.h>

using namespace std;

int main() {
	int V, N;
	vector<int> coins;
	ifstream fin ("money.in");
	ofstream fout ("money.out");

	fin >> V >> N;

	for(int i = 0; i < V; i++){
		int input;
		fin >> input;
		coins.push_back(input);
	}

	vector<vector<int>> dp;

	for(int i = 0; i <= V; i++){
		vector<int> row;

		for(int j = 0; j <= N; j++){
			row.push_back(0);
		}

		dp.push_back(row);
	}

	for(int i = 1; i <= V; i++){
		dp[i][0] = 1;
	}

	for(int i = 0; i < dp.size(); i++){
		for(int j = 0; j < dp[i].size(); j++){
			cout << dp[i][j] << " ";
		}

		cout << endl;
	}

	for(int i = 1; i < N; i++){
		for(int k = 1; k < (int) coins.size(); k++){
			if(i - coins[k] < 0){
				continue;
			}

			dp[i][k] = dp[i][k - 1] + dp[i - coins[k]][k];
		}
	}

	fout << dp[V][N] << endl;

//	sort(coins.begin(), coins.end());
//	vector<int> values (N + 1, 0);
//	values[0] = 1;
//
//	for(int i = 1; i < (int) values.size(); i++){
//		for(int j = 0; j < (int) coins.size(); j++){
//			if(i - coins[j] < 0){
//				break;
//			}
//
//			values[i] += values[i - coins[j]];
//		}
//	}
//
//	for(int i = 0; i < (int) values.size(); i++){
//		cout << values[i] << " ";
//	}
//
//	cout << endl;
//
//	fout << values[N] << endl;

	return 0;
}
